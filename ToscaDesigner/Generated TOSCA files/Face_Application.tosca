tosca_definitions_version: tosca_simple_yaml_1_3

metadata:
  «TPropertyDef» targetNamespace: "example.eu.myrtus.servicetemplates"
  «TPropertyDef» name: "MyrtusFace_Application"

topology_template:
  node_templates:
    Myrtus_Workstation_1:
      type: example.eu.myrtus.nodetypes.Myrtus-Workstation
      metadata:
        «TPropertyDef» displayName: "Myrtus-Workstation"
      
      
      
    MyrtusFaceDetectionService_0:
      type: example.eu.myrtus.nodetypes.MyrtusFaceDetectionService
      metadata:
        «TPropertyDef» displayName: "FaceDetection"
      properties:
        dockerImage: "thebigpotatoe/face-recognition-docker"
      requirements:
        - «TRequirement» host:
            node: Myrtus_Workstation_1
            relationship: 
            capability: «TCapabilityDefinition» host
      
    MyrtusCameraFeed_0:
      type: example.eu.myrtus.nodetypes.MyrtusCameraFeed
      metadata:
        «TPropertyDef» displayName: "CameraFeed"
      properties:
        dockerImage: "ci.hesi.energy:5000/myrtus/examples/myrtusface/camera_feed:web"
      requirements:
        - «TRequirement» host:
            node: Myrtus_Proxy_0
            relationship: 
            capability: «TCapabilityDefinition» host
      
    Myrtus_Proxy_0:
      type: example.eu.myrtus.nodetypes.MyrtusProxy
      metadata:
        «TPropertyDef» displayName: "Proxy"
      properties:
        dockerImage: "nginx:alpine"
        port: "443"
      requirements:
        - «TRequirement» host:
            node: Myrtus_Workstation_1
            relationship: 
            capability: «TCapabilityDefinition» host
        - «TRequirement» egress1:
            node: MyrtusCameraFeed_0
            relationship: 
            capability: «TCapabilityDefinition» WebService
        - «TRequirement» egress2:
            node: MyrtusFaceDetectionService_0
            relationship: 
            capability: «TCapabilityDefinition» FaceDetectionService
      artifacts:
        «TDeploymentArtifact» nginx.conf:
          type: tosca.artifacts.File
          deploy_path: /etc/nginx/conf.d/default.conf
          file: /servicetemplates/example.eu.myrtus.servicetemplates/MyrtusFace_Application_w1-wip2/files/MyrtusProxy_w1-wip1_0/nginx.conf/nginx.conf
        «TDeploymentArtifact» fullchain.pem:
          type: tosca.artifacts.File
          deploy_path: /certs/fullchain.pem
          file: /home/hesi/cert/fullchain.pem
        «TDeploymentArtifact» key:
          type: tosca.artifacts.File
          deploy_path: /certs/privkey.pem
          file: /home/hesi/cert/privkey.pem
  relationship_templates:
    con_HostedOn_2:
      type: tosca.relationships.hostedOn
    con_HostedOn_1:
      type: tosca.relationships.hostedOn
    con_HostedOn_0:
      type: tosca.relationships.hostedOn
    con_ConnectsTo_1:
      type: tosca.relationships.ConnectsTo
    con_ConnectsTo_0:
      type: tosca.relationships.ConnectsTo
